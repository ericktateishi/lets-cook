{"remainingRequest":"C:\\Projetos\\Vue\\lets-cook\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projetos\\Vue\\lets-cook\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Projetos\\Vue\\lets-cook\\src\\views\\Home.vue","mtime":1546231539591},{"path":"C:\\Projetos\\Vue\\lets-cook\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projetos\\Vue\\lets-cook\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport constants from \"../assets/Constants.js\"\nimport Request from \"../components/RequestResponse.vue\"\nimport Card from \"../components/Card.vue\"\n\nexport default {\n  name: 'Favorites',\n  components: {\n    Request,\n    Card\n  },\n  data () {\n    return {\n      form : {\n        search: \"\",\n        ingredients: 16,\n        diet: \"\",\n        health: [],\n        calories: 601,\n        time: 61,\n        notContain: [\"\"],\n      },\n      errorAdd: null,\n      loading: false,\n      error: false,\n      result: null,\n      filters: true,\n      loadCounter: 0,\n      load: 15\n    }\n  },\n  methods: {\n    addNewNotContain: function (){\n      if (this.form.notContain.every(element => element != \"\")){\n        this.form.notContain.push('')\n        this.errorAdd = null\n      }\n      else \n        this.errorAdd = \"last field has no value\"\n    },\n    search: function (more){\n      this.loading = true\n      \n      if (this.form.search.length < 1){\n        this.errorAdd = \"The search field is required\"\n        this.loading = false\n        return\n      }\n      console.log(constants.server + this.request)\n\n      constants.axios.get(constants.server + this.request)\n      .then(response => {\n        if (more) {\n          response.data.hits.forEach(element => {\n            this.result.hits.push(element)\n          })\n          this.loadCounter += this.load\n        }\n        else {\n          this.result = response.data\n          this.loadCounter = 0\n        }\n\n        this.filters = false\n      })\n      .catch(e => {\n        this.error = e\n      })\n      .finally(() => \n        this.loading = false\n      )\n    },\n    addFavorite: function (recipe){\n      this.$emit('addFavorite', recipe)\n    }\n  },\n  computed: {\n    request: function (){\n      let request = \"q=\" + this.form.search\n      \n      if (this.form.ingredients < 16)\n        request += \"&ingr=\" + this.form.ingredients\n\n      if (this.form.diet.length > 0)\n        request += \"&diet=\" + this.form.diet\n\n      if (this.form.health.length > 0){\n        this.form.health.forEach(element => {\n          request += \"&health=\" + element\n        })\n      }\n      \n      if (this.form.calories < 601)\n        request += \"&calories=%2B\" + this.form.calories\n\n      if (this.form.time < 61)\n        request += \"&time=%2B\" + this.form.time\n\n      if (this.form.notContain.length > 0){\n        this.form.notContain.forEach(element => {\n          if (element != \"\")\n            request += \"&excluded=\" + element\n        })\n      }\n  \n      return request + \"&from=\" + this.loadCounter + \"&to=\" + (this.loadCounter + this.load)\n    }\n  }\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src\\views","sourcesContent":["<template>\n  <main class=\"home\">\n    <h2>What do you want to cook today?</h2>\n    <Request :loading=\"loading\" :error=\"error\"></Request>\n    <section>\n      <div class=\"search-box\">\n        <input type=\"text\" v-model=\"form.search\" placeholder=\"Type a recipe name\" class=\"txt-field search-field\" v-on:keyup.13=\"search()\" v-focus>\n        <button class=\"search-btn\" v-on:click=\"search()\">Find now</button>\n        <button class=\"filters-btn\" v-on:click=\"filters = !filters\">{{filters ? \"&#9651;\" : \"&#9661;\"}}</button>\n      </div>\n      <transition name=\"slide-fade\">\n        <div class=\"filters\" v-if=\"filters\">\n          <p>You can use this filters to make your search better</p>\n          <div class=\"slider-box\">\n            <label>Max. ingredients</label>\n            <input type=\"range\" v-model=\"form.ingredients\" min=\"1\" max=\"16\" class=\"slider-field\"/>\n            <span>{{form.ingredients == 16 ? \"no-limit\" : form.ingredients}}</span>\n          </div>\n          <div class=\"slider-box\">\n            <label>Max. Calories</label>\n            <input type=\"range\" v-model=\"form.calories\" min=\"20\" max=\"601\" class=\"slider-field\"/>\n            <span>{{form.calories == 601 ? \"no-limit\" : form.calories}}</span>\n          </div>\n          <div class=\"slider-box\">\n            <label>Max. Time (in minutes)</label>\n            <input type=\"range\" v-model=\"form.time\" min=\"5\" max=\"61\" class=\"slider-field\"/>\n            <span>{{form.time == 61 ? \"no-limit\" : form.time}}</span>\n          </div>\n          <div class=\"selection-group\">\n            <label>Diet</label>\n            <div class=\"selection-box selection-radio\">\n              <input type=\"radio\" v-model=\"form.diet\" value=\"balanced\" id=\"balanced\"/>\n              <label for=\"balanced\">Balanced</label>\n            </div>\n            <div class=\"selection-box selection-radio\">\n              <input type=\"radio\" v-model=\"form.diet\" value=\"high-protein\" id=\"high-protein\"/>\n              <label for=\"high-protein\">High Protein</label>\n            </div>\n            <div class=\"selection-box selection-radio\">\n              <input type=\"radio\" v-model=\"form.diet\" value=\"high-fiber\" id=\"high-fiber\"/>\n              <label for=\"high-fiber\">High Fiber</label>\n            </div>\n            <div class=\"selection-box selection-radio\">\n              <input type=\"radio\" v-model=\"form.diet\" value=\"low-fat\" id=\"low-fat\"/>\n              <label for=\"low-fat\">Low Fat</label>\n            </div>\n            <div class=\"selection-box selection-radio\">\n              <input type=\"radio\" v-model=\"form.diet\" value=\"low-carb\" id=\"low-carb\"/>\n              <label for=\"low-carb\">Low Carb</label>\n            </div>\n          </div>\n          <div class=\"selection-group\">\n            <label>Health</label>\n            <div class=\"selection-box selection-checkbox\">\n              <input type=\"checkbox\" v-model=\"form.health\" value=\"sugar-conscious\" id=\"sugar-conscious\"/>\n              <label for=\"sugar-conscious\">Less than 4g of sugar</label>\n            </div>\n            <div class=\"selection-box selection-checkbox\">\n              <input type=\"checkbox\" v-model=\"form.health\" value=\"tree-nut-free\" id=\"tree-nut-free\"/>\n              <label for=\"tree-nut-free\">Tree Nut Free</label>\n            </div>\n            <div class=\"selection-box selection-checkbox\">\n              <input type=\"checkbox\" v-model=\"form.health\" value=\"alcohol-free\" id=\"alcohol-free\"/>\n              <label for=\"alcohol-free\">Alcohol Free</label>\n            </div>\n            <div class=\"selection-box selection-checkbox\">\n              <input type=\"checkbox\" v-model=\"form.health\" value=\"vegan\" id=\"vegan\"/>\n              <label for=\"vegan\">Vegan</label>\n            </div>\n            <div class=\"selection-box selection-checkbox\">\n              <input type=\"checkbox\" v-model=\"form.health\" value=\"vegetarian\" id=\"vegetarian\"/>\n              <label for=\"vegetarian\">Vegetarian</label>\n            </div>\n            <div class=\"selection-box selection-checkbox\">\n              <input type=\"checkbox\" v-model=\"form.health\" value=\"peanut-free\" id=\"peanut-free\"/>\n              <label for=\"peanut-free\">Peanut Free</label>\n            </div>\n          </div>\n          <div class=\"multiple-txt-box\">\n            <div v-for=\"(field, index) in form.notContain\" :key=\"index\">\n              <input type=\"text\" v-model=\"form.notContain[index]\" placeholder=\"Don't contain this ingredient\" class=\"txt-field\"/>\n            </div>\n            <button v-on:click=\"addNewNotContain()\">Add other food</button>\n            <span v-if=\"errorAdd\">{{errorAdd}}</span>\n          </div>\n        </div>\n      </transition>\n    </section>\n    <div v-if=\"result != null\" class=\"results\">\n      <div v-if=\"result.hits.length > 0\">\n        <p>We found {{result.count}} result(s)</p>\n\n        <Card v-for=\"(recipe, index) in result.hits\" :key=\"index\" :recipe=\"recipe\" @addFavorite=\"addFavorite\">\n        </Card>\n\n        <button v-if=\"result.count > loadCounter\" v-on:click=\"search(true)\" class=\"load-more\">Load more</button>\n      </div>\n      <p v-else>Sorry, but we have no results for your search</p>\n      \n    </div>\n  </main>\n</template>\n\n<script>\nimport constants from \"../assets/Constants.js\"\nimport Request from \"../components/RequestResponse.vue\"\nimport Card from \"../components/Card.vue\"\n\nexport default {\n  name: 'Favorites',\n  components: {\n    Request,\n    Card\n  },\n  data () {\n    return {\n      form : {\n        search: \"\",\n        ingredients: 16,\n        diet: \"\",\n        health: [],\n        calories: 601,\n        time: 61,\n        notContain: [\"\"],\n      },\n      errorAdd: null,\n      loading: false,\n      error: false,\n      result: null,\n      filters: true,\n      loadCounter: 0,\n      load: 15\n    }\n  },\n  methods: {\n    addNewNotContain: function (){\n      if (this.form.notContain.every(element => element != \"\")){\n        this.form.notContain.push('')\n        this.errorAdd = null\n      }\n      else \n        this.errorAdd = \"last field has no value\"\n    },\n    search: function (more){\n      this.loading = true\n      \n      if (this.form.search.length < 1){\n        this.errorAdd = \"The search field is required\"\n        this.loading = false\n        return\n      }\n      console.log(constants.server + this.request)\n\n      constants.axios.get(constants.server + this.request)\n      .then(response => {\n        if (more) {\n          response.data.hits.forEach(element => {\n            this.result.hits.push(element)\n          })\n          this.loadCounter += this.load\n        }\n        else {\n          this.result = response.data\n          this.loadCounter = 0\n        }\n\n        this.filters = false\n      })\n      .catch(e => {\n        this.error = e\n      })\n      .finally(() => \n        this.loading = false\n      )\n    },\n    addFavorite: function (recipe){\n      this.$emit('addFavorite', recipe)\n    }\n  },\n  computed: {\n    request: function (){\n      let request = \"q=\" + this.form.search\n      \n      if (this.form.ingredients < 16)\n        request += \"&ingr=\" + this.form.ingredients\n\n      if (this.form.diet.length > 0)\n        request += \"&diet=\" + this.form.diet\n\n      if (this.form.health.length > 0){\n        this.form.health.forEach(element => {\n          request += \"&health=\" + element\n        })\n      }\n      \n      if (this.form.calories < 601)\n        request += \"&calories=%2B\" + this.form.calories\n\n      if (this.form.time < 61)\n        request += \"&time=%2B\" + this.form.time\n\n      if (this.form.notContain.length > 0){\n        this.form.notContain.forEach(element => {\n          if (element != \"\")\n            request += \"&excluded=\" + element\n        })\n      }\n  \n      return request + \"&from=\" + this.loadCounter + \"&to=\" + (this.loadCounter + this.load)\n    }\n  }\n}\n</script>\n"]}]}